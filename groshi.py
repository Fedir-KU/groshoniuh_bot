from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes
import re
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# üîê Google Sheets
SHEET_ID = '—Ç—É—Ç_ID_—Ç–≤–æ—î—ó_—Ç–∞–±–ª–∏—Ü—ñ'
GOOGLE_CREDENTIALS_FILE = 'credentials.json'  # —Ç–≤—ñ–π json –∑ Google Cloud

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Ç–∞–±–ª–∏—Ü—ñ
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name(GOOGLE_CREDENTIALS_FILE, scope)
client = gspread.authorize(creds)
sheet = client.open_by_key(SHEET_ID).sheet1

# üì• –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message.text
    user = update.message.from_user.first_name
    date = datetime.now().strftime("%Y-%m-%d")

    # üîç –ü–∞—Ä—Å–∏–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–∫–∞—Ç–µ–≥–æ—Ä—ñ—è —Å—É–º–∞ –æ–ø–∏—Å)
    match = re.match(r"(?P<cat>\w+)\s+(?P<sum>\d+)[^\d]*(?P<desc>.*)", message)
    if match:
        cat = match.group("cat")
        summ = match.group("sum")
        desc = match.group("desc").strip()

        # –î–æ–¥–∞—î–º–æ –≤ —Ç–∞–±–ª–∏—Ü—é
        sheet.append_row([date, user, cat, summ, desc])
        await update.message.reply_text(f"‚úÖ –î–æ–¥–∞–Ω–æ: {cat} ‚Äî {summ} –≥—Ä–Ω ‚Äî {desc}")
    else:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ –∑–º—ñ–≥ —Ä–æ–∑–ø—ñ–∑–Ω–∞—Ç–∏ –≤–∏—Ç—Ä–∞—Ç—É. –§–æ—Ä–º–∞—Ç: \"—ó–∂–∞ 150 –ø—ñ—Ü–∞\"")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    TOKEN = "—Ç—É—Ç_—Ç–≤—ñ–π_–±–æ—Ç_—Ç–æ–∫–µ–Ω"
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))
    print("–ë–æ—Ç –ø—Ä–∞—Ü—é—î!")
    app.run_polling()
